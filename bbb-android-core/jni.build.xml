<?xml version="1.0" encoding="UTF-8"?>

<project name="bbb-android-jni" basedir=".">
	<!--property name="ndk.dir" value="../../../android-ndk-r6b"/-->
	<property name="ndk.dir" value="../../../android-ndk-r4-crystax"/>
	<property name="ndk.build" value="${ndk.dir}/ndk-build"/>
	
	<property name="target.iva" value="thread common queue decode encode" />
	<property name="target.mconf" value="mconfnativeshowvideo mconfnativeencodevideo" />

	<target name="init">
		<delete includeemptydirs="true" failonerror="false">
			<fileset dir="libs/armeabi/tmp"/>
		</delete>
		<mkdir dir="libs/armeabi/tmp"/>
		<copy toDir="libs/armeabi/tmp" failonerror="false">
			<fileset dir="libs/armeabi" includes="*.so"/>
		</copy>
		<copy toDir="obj/local/armeabi" failonerror="false" overwrite="false">
			<fileset dir="libs/armeabi/tmp" includes="*.so"/>
		</copy>
	</target>

    <target name="clean">
        <delete includeemptydirs="true" failonerror="false">
            <fileset dir="obj/"/>
			<fileset dir="libs/armeabi/tmp"/>
        </delete>      
    </target>

	<macrodef name="build">
		<attribute name="target"/>
		<sequential>
			<exec executable="echo" output="jni/Application.mk" >
                <arg value="-e" />
                <arg value="APP_MODULES := @{target}\n" />
                <arg value="APP_OPTIM := release\n" />
                <arg value="APP_CFLAGS := -O3\n" />
				<!-- http://groups.google.com/group/android-ndk/browse_thread/thread/983c436239d48704 -->
				<!--arg value="APP_STL := gnustl_static" /-->
			</exec>
			<exec executable="${ndk.build}" failonerror="true">
				<arg value="-j" />
				<arg value="8" />
			</exec>
		</sequential>
	</macrodef>
	
	<target name="build-mconf" depends="init">
		<build target="${target.mconf}"/>
		<deploy-libs />
	</target>
	
    <target name="build-iva" depends="init">
        <build target="${target.iva}"/>
		<deploy-libs />
    </target>
    
	<macrodef name="deploy-libs">
		<sequential>
			<copy toDir="libs/armeabi/tmp" overwrite="true">
				<fileset dir="libs/armeabi" includes="*.so"/>
			</copy>
			<copy toDir="libs/armeabi" overwrite="true">
				<fileset dir="libs/armeabi/tmp" includes="*.so"/>
			</copy>
		</sequential>
	</macrodef>
	
	<target name="build-all" depends="init">
		<build target="${target.iva} ${target.mconf}" />
		<deploy-libs />
	</target>
    
</project>
